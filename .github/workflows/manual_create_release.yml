name: Manually Create the Release

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch

env:
  REGISTRY_GITHUB: ghcr.io
  REGISTRY_DOCKERHUB: andreee94
  IMAGE_NAME: ${{ github.repository }}

jobs:
  create_release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16

    - name: Go version
      run: go version

    - name: Make the manifest.yaml file 
      run: make rendered-manifest.yaml

    - name: Set the manifest name Env
      run: echo "MANIFEST_FILE_NAME=cert-manager-freenom-v$(cat .version).yaml" >> $GITHUB_ENV
      # run: echo "cert-manager-freenom-v$(cat .version).yaml" >> $MANIFEST_FILE_NAME

    - name: Create the final .yaml file
      run: cp ./_out/rendered-manifest.yaml ${{ env.MANIFEST_FILE_NAME }}

    - name: Setup Tag name
      run: echo "TAG_NAME=v$(cat .version)" >> $GITHUB_ENV

    - name: Release
      uses: softprops/action-gh-release@v1
      # if: startsWith(github.ref, 'refs/tags/')
      with:
        files: ${{ env.MANIFEST_FILE_NAME }}
        tag_name: ${{ env.TAG_NAME }}

    # - name: Create Release
    #   id: create_release
    #   uses: actions/create-release@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     tag_name: ${{ github.ref }}
    #     release_name: Release ${{ github.ref }}
    #     draft: false
    #     prerelease: false

    # - name: Upload Release Asset
    #   id: upload-release-asset 
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
    #     asset_path: ./my-artifact.zip
    #     asset_name: my-artifact.zip
    #     asset_content_type: application/yaml